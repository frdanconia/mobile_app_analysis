PlotKnnFeatures <- function(dataset, onehotmatrix) {
   col.scale <- colMaxs(abs(onehotmatrix))
   x.sc <- sweep(onehotmatrix, 2, col.scale, "/")
   x.knn <-
      knnExtract(
         xtr = x.sc,
         ytr = dataset$income,
         xte = x.sc,
         k = 1,
         nthread = 4
      )$new.tr
   g <- data_frame(x1 = x.knn[, 1],
                   x2 = x.knn[, 2],
                   y = dataset$income) %>%
      ggplot(aes(x = x1, y = x2, color = y)) +
      geom_point(size = 1, alpha = 0.8) +
      scale_color_brewer(name = "Income", palette = "Set1") +
      labs(x = "KNN Feature 1", y = "KNN Feature 2") +
      theme_ipsum(axis_title_size = 12)
   g <- knnDecision(
      xtr = x.knn,
      ytr = dataset$income,
      xte = x.knn,
      yte = dataset$income,
      k = 3
   )
   
   ## Generate more KNN features
   x.knn <-
      knnExtract(
         xtr = x.sc,
         ytr = dataset$income,
         xte = x.sc,
         k = 5,
         nthread = 4
      )$new.tr
   colnames(x.knn) <- paste0("knn_", 1:ncol(x.knn))
   
   ## Plot 3D KNN features
   p <- plot_ly(
      x = x.knn[, 1],
      y = x.knn[, 5],
      z = x.knn[, 10],
      color = dataset$income,
      colors = c('black', 'red'),
      opacity = 0.6,
      marker = list(size = 3)
   ) %>%
      add_markers() %>%
      layout(scene = list(
         xaxis = list(title = 'KNN 1'),
         yaxis = list(title = 'KNN 5'),
         zaxis = list(title = 'KNN 10')
      ))
   
   save(x.knn, file = "./data/knn_features.rda", compress = "bzip2")
   return(p)
}
