library(vroom)
library(lubridate)
library(tidyverse)
klienci <- vroom("data/klienci.csv")
session_geo <- vroom("data/session_geo.csv")
session_info <- vroom("data/session_info.csv")
klienci[, 1] <- c()
length(unique(klienci$klient_id))
length(unique(klienci$klient_id[klienci$czy_w_bazie_klientow == 1]))
klienci_w_bazie <- klienci[klienci$czy_w_bazie_klientow == 1,]
sum(klienci_w_bazie$czy_kupil) / nrow(klienci_w_bazie)
sum(klienci[klienci$czy_w_bazie_klientow == 0,]$czy_kupil) / nrow(klienci[klienci$czy_w_bazie_klientow == 0,])
sum(klienci$czy_kupil) / nrow(klienci)
table(klienci$wyksztalcenie[klienci$czy_kupil == 1])
mean(klienci$wiek[!is.na(klienci$wiek)])
median(klienci$wiek[!is.na(klienci$wiek)])
salary <-
data.frame(klient_id = klienci$klient_id,
wynagrodzenie = klienci$wynagrodzenie)
for (i in 1:length(salary$klient_id)) {
salary$nsessions[i] <-
sum(session_info$klient_id == salary$klient_id[i])
}
for (i in 1:length(salary$klient_id)) {
salary$session_length_mean[i] <-
mean(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
salary$session_length_median[i] <-
median(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
}
for (i in 1:length(salary$klient_id)) {
salary$session_length_mean[i] <-
mean(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
salary$session_length_median[i] <-
median(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
salary$session_length_variance[i] <-
var(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
salary$session_length_90percentile[i] <-
quantile(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]],0.9)[[1]]
}
for (i in 1:length(salary$klient_id)) {
dates <- session_info$date[session_info$klient_id == salary$klient_id[i]]
dates <- dates[dates != "0"]
dates <- dates[!is.na(dates)]
dates <- as.Date(dates)
salary$klient_ndays[i] <- as.numeric(today() - min(dates))
}
for (i in 1:length(salary$klient_id)) {
dates <- session_info$date[session_info$klient_id == salary$klient_id[i]]
dates <- dates[dates != "0"]
dates <- dates[!is.na(dates)]
dates <- as.Date(dates)
salary$avg_diff_days[i] <- as.numeric(mean(diff(sort(dates))))
}
#im czesciej tym srednia jest nizsza a spodziewamy sie ze im czesciej tym lepszy klient dla nas
salary$avg_diff_days <- 1/(salary$avg_diff_days/min(salary$avg_diff_days))
salary$klient_ndays <- salary$klient_ndays / min(salary$klient_ndays)
salary$nsessions_per_ndays <-  salary$nsessions/salary$klient_ndays
salary$avg_diff_days
ggplot(salary, aes(x = nsessions, y = wynagrodzenie)) + geom_point() + geom_smooth(method =
"loess", se = F)
ggplot(salary, aes(x = nsessions_per_ndays, y = wynagrodzenie)) + geom_point() + geom_smooth(method =
"loess", se = F)
temp <- salary %>% filter(avg_diff_days < 0.2)
ggplot(temp, aes(x = avg_diff_days, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
library(vroom)
library(lubridate)
library(tidyverse)
klienci <- vroom("data/klienci.csv")
session_geo <- vroom("data/session_geo.csv")
session_info <- vroom("data/session_info.csv")
klienci[, 1] <- c()
source('~/GitHub/mobile_app_analysis/main.R', encoding = 'UTF-8')
salary <-
data.frame(klient_id = klienci$klient_id,
wynagrodzenie = klienci$wynagrodzenie)
source('~/GitHub/mobile_app_analysis/main.R', encoding = 'UTF-8')
source('~/GitHub/mobile_app_analysis/main.R', encoding = 'UTF-8')
salary$avg_diff_days
library(vroom)
library(lubridate)
library(tidyverse)
klienci <- vroom("data/klienci.csv")
session_geo <- vroom("data/session_geo.csv")
session_info <- vroom("data/session_info.csv")
klienci[, 1] <- c()
length(unique(klienci$klient_id))
length(unique(klienci$klient_id[klienci$czy_w_bazie_klientow == 1]))
klienci_w_bazie <- klienci[klienci$czy_w_bazie_klientow == 1,]
sum(klienci_w_bazie$czy_kupil) / nrow(klienci_w_bazie)
sum(klienci[klienci$czy_w_bazie_klientow == 0,]$czy_kupil) / nrow(klienci[klienci$czy_w_bazie_klientow == 0,])
sum(klienci$czy_kupil) / nrow(klienci)
table(klienci$wyksztalcenie[klienci$czy_kupil == 1])
mean(klienci$wiek[!is.na(klienci$wiek)])
median(klienci$wiek[!is.na(klienci$wiek)])
salary <-
data.frame(klient_id = klienci$klient_id,
wynagrodzenie = klienci$wynagrodzenie)
for (i in 1:length(salary$klient_id)) {
salary$nsessions[i] <-
sum(session_info$klient_id == salary$klient_id[i])
}
for (i in 1:length(salary$klient_id)) {
salary$session_length_mean[i] <-
mean(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
salary$session_length_median[i] <-
median(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
}
for (i in 1:length(salary$klient_id)) {
salary$session_length_mean[i] <-
mean(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
salary$session_length_median[i] <-
median(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
salary$session_length_variance[i] <-
var(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
salary$session_length_90percentile[i] <-
quantile(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]],0.9)[[1]]
}
for (i in 1:length(salary$klient_id)) {
dates <- session_info$date[session_info$klient_id == salary$klient_id[i]]
dates <- dates[dates != "0"]
dates <- dates[!is.na(dates)]
dates <- as.Date(dates)
salary$klient_ndays[i] <- as.numeric(today() - min(dates))
}
salary$klient_ndays <- salary$klient_ndays / min(salary$klient_ndays)
salary$nsessions_per_ndays <-  salary$nsessions/salary$klient_ndays
for (i in 1:length(salary$klient_id)) {
dates <- session_info$date[session_info$klient_id == salary$klient_id[i]]
dates <- dates[dates != "0"]
dates <- dates[!is.na(dates)]
dates <- as.Date(dates)
salary$avg_diff_days[i] <- as.numeric(mean(diff(sort(dates))))
}
salary$avg_diff_days
salary$avg_diff_days
salary$avg_diff_days
salary$avg_diff_days
salary$avg_diff_days
salary$avg_diff_days
salary$avg_diff_days
salary$avg_diff_days
#im czesciej tym srednia jest nizsza a spodziewamy sie ze im czesciej tym lepszy klient dla nas
salary$activity_frequency <- 1/(salary$avg_diff_days/min(salary$avg_diff_days))
#jezeli sredni czas miedzy iloscia sesji jest krotki to jedna sesja klienta jest "warta" wiecej
salary$nsessions_per_avgdifftime <- salary$nsessions * salary$avg_diff_days
#jezeli sredni czas miedzy iloscia sesji jest krotki to jedna sesja klienta jest "warta" wiecej
salary$nsessions_per_avgdifftime <- salary$nsessions * salary$avg_diff_days
salary$activity_overall <- log(salary$nsessions_per_avgdifftime * salary$nsessions_per_ndays)
ggplot(salary, aes(x = nsessions, y = wynagrodzenie)) + geom_point() + geom_smooth(method =
"loess", se = F)
ggplot(salary, aes(x = nsessions_per_ndays, y = wynagrodzenie)) + geom_point() + geom_smooth(method =
"loess", se = F)
temp <- salary %>% filter(avg_diff_days < 0.2)
ggplot(temp, aes(x = activity_frequency, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(temp, aes(x = activity_frequency, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = activity_frequency, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
temp <- salary %>% filter(activity_frequency < 0.3)
ggplot(temp, aes(x = activity_frequency, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = nsessions_per_avgdifftime, y = wynagrodzenie)) + geom_point() + geom_smooth(method =
"loess", se = F)
#jezeli sredni czas miedzy iloscia sesji jest krotki to jedna sesja klienta jest "warta" wiecej
salary$nsessions_per_avgdifftime <- salary$nsessions * salary$activity_frequency
salary$klient_ndays <- salary$klient_ndays / min(salary$klient_ndays)
salary$nsessions_per_ndays <-  salary$nsessions/salary$klient_ndays
#im czesciej tym srednia jest nizsza a spodziewamy sie ze im czesciej tym lepszy klient dla nas
salary$activity_frequency <- 1/(salary$avg_diff_days/min(salary$avg_diff_days))
#jezeli sredni czas miedzy iloscia sesji jest krotki to jedna sesja klienta jest "warta" wiecej
salary$nsessions_per_avgdifftime <- salary$nsessions * salary$activity_frequency
salary$activity_overall <- log(salary$nsessions_per_avgdifftime * salary$nsessions_per_ndays)
ggplot(salary, aes(x = nsessions, y = wynagrodzenie)) + geom_point() + geom_smooth(method =
"loess", se = F)
ggplot(salary, aes(x = nsessions_per_ndays, y = wynagrodzenie)) + geom_point() + geom_smooth(method =
"loess", se = F)
temp <- salary %>% filter(activity_frequency < 0.3)
ggplot(temp, aes(x = activity_frequency, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = nsessions_per_avgdifftime, y = wynagrodzenie)) + geom_point() + geom_smooth(method =
"loess", se = F)
ggplot(salary, aes(x = activity_overall, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
model <- lm(activity_overall~wynagrodzenie,data=salary)
summary(model)
plot(model)[1]
model <- lm(activity_overall~wynagrodzenie,data=salary)
summary(model)
plot(model)[[1]]
plot(model, which=1)
model <- lm(activity_overall~wynagrodzenie,data=salary)
summary(model)
plot(model, which=1)
plot(model, which=2)
plot(model, which=3)
plot(model, which=4)
plot(model, which=5)
plot(model, which=5)
plot(model, which=4)
plot(model, which=4)
plot(model, which=5)
plot(model, which=4)
plot(model, which=1)
plot(model, which=2)
plot(model, which=3)
plot(model, which=4)
plot(model, which=5)
ggplot(salary, aes(x = session_length_mean, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_median, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_variance, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_90percentile, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
model2 <- summary(lm(session_length_mean~wynagrodzenie,data=salary))
summary(model2)
session_length_mean
session_length_mean
data$session_length_mean
salary$session_length_mean
salary$session_length_mean
salary$session_length_mean
salary$session_length_mean
salary$session_length_mean
salary$session_length_mean
salary$session_length_mean
salary$session_length_mean
ggplot(salary, aes(x = session_length_mean, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_median, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_variance, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_90percentile, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_variance, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
temp <- salary %>% filter(session_length_variance < 600)
ggplot(temp, aes(x = session_length_variance, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_variance, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_median, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_mean, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_90percentile, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
for (i in 1:length(salary$klient_id)) {
salary$session_length_mean[i] <-
mean(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
salary$session_length_median[i] <-
median(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
salary$session_length_variance[i] <-
var(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]])
salary$session_length_90percentile[i] <-
quantile(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]],0.9)[[1]]
salary$session_length_10percentile[i] <-
quantile(session_info$dlugosc_sesji_min[session_info$klient_id == salary$klient_id[i]],0.1)[[1]]
}
ggplot(salary, aes(x = session_length_10percentile, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
salary$session_length_variance / salary$nsessions
ggplot(salary, aes(x = session_length_variance, y = nsessions)) + geom_point() + geom_smooth(method = "loess", se = F)
plot(model, which=1)
plot(model, which=2)
plot(model, which=2)
plot(model, which=1)
plot(model, which=2)
#Obserwacje odstajace na pierwszych kwantylach
plot(model, which=3)
plot(model, which=4)
plot(model, which=5)
#Zarobki klientow maja istotny wplyw na czestotliwosc korzystania z aplikacji
plot(model, which=6)
#jest kilka outlierow jednak zmiany wartoci wspóczynników regresji przy pomini
plot(model, which=5)
#Zarobki klientow maja istotny wplyw na czestotliwosc korzystania z aplikacji
plot(model, which=6)
ggplot(salary, aes(x = session_length_mean, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_median, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_variance, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
temp <- salary %>% filter(session_length_variance < 600)
ggplot(temp, aes(x = session_length_variance, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_90percentile, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_10percentile, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
#Zarobki klientów nie maja wplywu na czas sprzedzany w appce, srednia, mediana, wariancja i 10 i 90 percentyl spedzanego czasu na to nie wskazuja
#Zarobki klientow maja statystycznie istotny wplyw na czestotliwosc korzystania z aplikacji
plot(model, which=4)
#Obserwacje odstajace na pierwszych kwantylach
plot(model, which=3)
plot(model, which=1)
install.packages("lmtest")
library(lmtest)
bptest(model)
bptest(model)
plot(model, which=1)
plot(model, which=2)
#Obserwacje odstajace na pierwszych kwantylach
plot(model, which=4)
plot(model, which=5)
plot(model, which=6)
plot(model, which=1)
plot(model, which=2)
#Obserwacje odstajace na pierwszych kwantylach
plot(model, which=4)
bptest(model)
ggplot(salary, aes(x = session_length_mean, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_median, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_variance, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
temp <- salary %>% filter(session_length_variance < 600)
ggplot(temp, aes(x = session_length_variance, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_90percentile, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
ggplot(salary, aes(x = session_length_10percentile, y = wynagrodzenie)) + geom_point() + geom_smooth(method = "loess", se = F)
salary
temp <- salary
temp$wynagrodzenie <- c()
merge(klienci_w_bazie,temp,by=c("klient_id"))
klienci <- merge(klienci_w_bazie,temp,by=c("klient_id"))
library(vroom)
library(lubridate)
library(tidyverse)
library(lmtest)
klienci <- vroom("data/klienci.csv")
session_geo <- vroom("data/session_geo.csv")
session_info <- vroom("data/session_info.csv")
klienci[, 1] <- c()
temp <- salary
temp$wynagrodzenie <- c()
salary$klient_id
klienci <- merge(klienci,temp,by=c("klient_id"))
session_geo
merge(session_info,session_geo,by="id_sesji")
session <- merge(session_info,session_geo,by="id_sesji")
a <- session$klient_id == salary$klient_id[1]
a
session$geo
session
session$lon
session$lon[session$session$klient_id == salary$klient_id[1],]
session$lon[session$session$klient_id == salary$klient_id[1],]
session$lon[session$session$klient_id == salary$klient_id[1]]
session$lon[session$klient_id == klienci$klient_id[1]]
mean(session$lon[session$klient_id == klienci$klient_id[1]])
sd(session$lon[session$klient_id == klienci$klient_id[1]])
session <- merge(session_info,session_geo,by="id_sesji")
for (i in 1:length(klienci$klient_id)) {
klienci$lon_mean <- mean(session$lon[session$klient_id == klienci$klient_id[i]])
klienci$lon_sd <- sd(session$lon[session$klient_id == klienci$klient_id[i]])
klienci$lat_mean <- mean(session$lat[session$klient_id == klienci$klient_id[i]])
klienci$lat_sd <- sd(session$lat[session$klient_id == klienci$klient_id[i]])
}
session$lon
session$date
library(vroom)
library(vroom)
library(lubridate)
library(tidyverse)
library(lmtest)
klienci <- vroom("data/klienci.csv")
session_geo <- vroom("data/session_geo.csv")
session_info <- vroom("data/session_info.csv")
klienci[, 1] <- c()
length(unique(klienci$klient_id))
length(unique(klienci$klient_id[klienci$czy_w_bazie_klientow == 1]))
klienci_w_bazie <- klienci[klienci$czy_w_bazie_klientow == 1,]
sum(klienci_w_bazie$czy_kupil) / nrow(klienci_w_bazie)
sum(klienci[klienci$czy_w_bazie_klientow == 0,]$czy_kupil) / nrow(klienci[klienci$czy_w_bazie_klientow == 0,])
sum(klienci$czy_kupil) / nrow(klienci)
session <- merge(session_info,session_geo,by="id_sesji")
for (i in 1:length(klienci$klient_id)) {
klienci$lon_mean <- mean(session$lon[session$klient_id == klienci$klient_id[i]])
klienci$lon_sd <- sd(session$lon[session$klient_id == klienci$klient_id[i]])
klienci$lat_mean <- mean(session$lat[session$klient_id == klienci$klient_id[i]])
klienci$lat_sd <- sd(session$lat[session$klient_id == klienci$klient_id[i]])
}
