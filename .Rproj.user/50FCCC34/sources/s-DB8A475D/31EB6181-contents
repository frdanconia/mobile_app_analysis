#W trakcie analizy powstała potrzeba posiadania informacji
#jaki jest procent pokrycia powierzchni mieszkalnej w promieniu stu metrów od klienta.
#Na podstawie odpowiednich źródeł danych przygotuj zestawienie (również w formie wizualizacji na mapie)
#jaki procent stumetrowego bufora wokół poszczególnego klienta to powierzchnia mieszkalna.
#devtools::install_github("hrbrmstr/overpass")

library(overpass)
library(osmdata)
library(sp)

#session$lat[1]
#session$lon[1]


check_oo <- function(lat, lon, meter) {
  lat1 <- as.numeric(lat - (180 / pi) * (meter / 6378137))
  lon1 <-
    as.numeric(lon - (180 / pi) * (meter / 6378137) / cos(lat1))
  lat2 <- as.numeric(lat + (180 / pi) * (meter / 6378137))
  lon2 <-
    as.numeric(lon + (180 / pi) * (meter / 6378137) / cos(lat2))
  bb <- c(lat1, lon1, lat2, lon2)
  
  bbstring <- paste(bb, collapse = ",")
  
  vv <- "residential"
  q1 <-
    paste0('  way["highway"="', vv, '"](', bbstring, ');', collapse = '\n')
  qq <-
    paste0('[out:xml][timeout:25]; \n( \n',
           q1,
           '); \nout body; \n>; \nout skel qt;')
  
  oo <- overpass_query
  
  return(oo)
}

check_residental_coverage <- function(lat, lon, meter) {
  lat1 <- as.numeric(lat - (180 / pi) * (meter / 6378137))
  lon1 <-
    as.numeric(lon - (180 / pi) * (meter / 6378137) / cos(lat1))
  lat2 <- as.numeric(lat + (180 / pi) * (meter / 6378137))
  lon2 <-
    as.numeric(lon + (180 / pi) * (meter / 6378137) / cos(lat2))
  bb <- c(lat1, lon1, lat2, lon2)
  
  bbstring <- paste(bb, collapse = ",")
  
  vv <- "residential"
  q1 <-
    paste0('  way["highway"="', vv, '"](', bbstring, ');', collapse = '\n')
  qq <-
    paste0('[out:xml][timeout:25]; \n( \n',
           q1,
           '); \nout body; \n>; \nout skel qt;')
  
  oo <- overpass_query(qq)
  
  if (is.null(oo)) {
    rt <- 0
  } else {
    rt <- (length(oo@data$highway) / meter) * 10
  }
  
  return(rt)
}


check_residental_coverage(session$lat[1], session$lon[1], 1000)
check_residental_coverage(session$lat[2], session$lon[2], 1000)
check_residental_coverage(session$lat[3], session$lon[3], 1000)
check_residental_coverage(session$lat[4], session$lon[4], 1000)
check_residental_coverage(session$lat[5], session$lon[5], 1000)

oo <- check_oo(session$lat[1], session$lon[1], 10000)

oo@data
lo
oo@data$tunnel[is.na(oo@data$tunnel)] <- "no"
plot(oo,
     col = factor(oo@data$highway),
     lty = (oo@data$tunnel == "yes") + 1)
legend(
  x = "right",
  legend = unique(oo@data$highway),
  col = unique(factor(oo@data$highway)),
  lty = 1,
  cex = 0.7
)

length(oo@data$highway)